#include <iostream>
#include <string>

using namespace std;

// default constructor is the constructor that doesnt expect any args
// its also called no-args constructor
// once defined a constructor for a class
// cpp will not generate a default constructor

using namespace std;

class Player{

private:
    string name;
    int health;
    int xp;

public:
    void set_name(string nameval){
        name = nameval;
    }
    string get_name(){
        return name;
    }

    // now creating a constructor

    Player(){ // writing this means no default constructor will be called if provides no args
        name = "None";
        health = 100;
        xp = 3;
    }

    Player(string nameval, int healthval, int xpval){
        name = nameval;
        health = healthval;
        xp = xpval;
    }
    // Note:
    // if only wrote the first constructor, exclude the top one with no arg
    // the default constructor will not be generated by cpp
    // and one can only use the second constructor to create a new Player object

    // class can have as many constructors as you would provide
    // but them each must have a unique signiture

    // the best practice is to use constructor to init all class attributes
    // so the new objects contain no garbage data
};

int main (void)
{
    Player frank; // the constructor is called, because we wrote one
    cout << frank.get_name() << endl; // None
    frank.set_name("Frank");
    cout << frank.get_name() << endl;

    Player tom("Tom", 200, 10); // the constructor
    cout << tom.get_name() << endl; // None
    tom.set_name("Tom after set_name()");
    cout << tom.get_name() << endl;

    // also works on Ptr
    Player* enemyPtr = new Player("Enemy", 50, 5);
    cout << enemyPtr->get_name() << endl; // None
    enemyPtr->set_name("Enemy after set_name()");
    cout << enemyPtr->get_name() << endl;

    return 0;
}